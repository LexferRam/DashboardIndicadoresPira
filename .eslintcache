[{"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\index.js":"1","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\App.js":"2","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\serviceWorkerRegistration.js":"3","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Tabs.js":"4","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\AppBar.js":"5","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Tabs2.js":"6","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Login.js":"7","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\hocs\\PrivateRoute.js":"8","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\hocs\\UnprivateRoute.js":"9","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\Context\\AuthContext\\AuthState.js":"10","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\TabContent.js":"11","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\Context\\AuthContext\\AuthContext.js":"12","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Exportarexcel.js":"13","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridCotProdOcea.js":"14","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridCotOceaPerfil.js":"15","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridPorcTotal.js":"16","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridEmiOceaPerfil.js":"17","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridDivisEfec.js":"18","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridCotOcea.js":"19","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\Grafico.js":"20","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\GraficaCotiVsEm.js":"21","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\Graficoproductos.js":"22","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\GrafMtoFaltSobr.js":"23","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\GraficoBar.js":"24","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\Graficoprodperfil.js":"25","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Alerta.js":"26","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Tabs3.js":"27","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\hooks\\useListCurrencies.js":"28"},{"size":312,"mtime":1613571445712,"results":"29","hashOfConfig":"30"},{"size":4234,"mtime":1623940148838,"results":"31","hashOfConfig":"30"},{"size":5064,"mtime":499162500000,"results":"32","hashOfConfig":"30"},{"size":4281,"mtime":1623939582652,"results":"33","hashOfConfig":"30"},{"size":1737,"mtime":1619035716963,"results":"34","hashOfConfig":"30"},{"size":4029,"mtime":1623095123620,"results":"35","hashOfConfig":"30"},{"size":5464,"mtime":1621031453701,"results":"36","hashOfConfig":"30"},{"size":897,"mtime":1618274545230,"results":"37","hashOfConfig":"30"},{"size":607,"mtime":1618275072568,"results":"38","hashOfConfig":"30"},{"size":2026,"mtime":1618498648183,"results":"39","hashOfConfig":"30"},{"size":35951,"mtime":1623984154435,"results":"40","hashOfConfig":"30"},{"size":113,"mtime":1614286164946,"results":"41","hashOfConfig":"30"},{"size":1029,"mtime":1623092806907,"results":"42","hashOfConfig":"30"},{"size":2079,"mtime":1614018616533,"results":"43","hashOfConfig":"30"},{"size":2006,"mtime":1614018631753,"results":"44","hashOfConfig":"30"},{"size":2287,"mtime":1618495514413,"results":"45","hashOfConfig":"30"},{"size":1856,"mtime":1614018674603,"results":"46","hashOfConfig":"30"},{"size":6960,"mtime":1622170246282,"results":"47","hashOfConfig":"30"},{"size":2938,"mtime":1612558684386,"results":"48","hashOfConfig":"30"},{"size":2866,"mtime":1623982420916,"results":"49","hashOfConfig":"30"},{"size":1861,"mtime":1613741943732,"results":"50","hashOfConfig":"30"},{"size":2182,"mtime":1612797978795,"results":"51","hashOfConfig":"30"},{"size":1672,"mtime":1618495249932,"results":"52","hashOfConfig":"30"},{"size":7697,"mtime":1623093727159,"results":"53","hashOfConfig":"30"},{"size":4070,"mtime":1612883033051,"results":"54","hashOfConfig":"30"},{"size":1570,"mtime":1618501672103,"results":"55","hashOfConfig":"30"},{"size":3991,"mtime":1623095284224,"results":"56","hashOfConfig":"30"},{"size":1733,"mtime":1623983200047,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"bh57vh",{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"60"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":49,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\index.js",[],["132","133"],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\App.js",["134","135","136"],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\serviceWorkerRegistration.js",[],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Tabs.js",["137"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport TabContent from \"./TabContent\";\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`scrollable-auto-tabpanel-${index}`}\r\n      aria-labelledby={`scrollable-auto-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `scrollable-force-tab-${index}`,\r\n    \"aria-controls\": `scrollable-force-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto() {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const REACT_API_URL= \"https://emergencia24horas.segurospiramide.com/node/express/servicios/api\"\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" color=\"default\">\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n          variant=\"scrollable\"\r\n          scrollButtons=\"on\"\r\n          aria-label=\"scrollable auto tabs example\"\r\n        >\r\n          <Tab label=\"Cotizaciones emitidas vs no emitidas\" {...a11yProps(0)} />\r\n          <Tab label=\"Cotizaciones Piramide\" {...a11yProps(1)} />\r\n          <Tab label=\"Cotizaciones por Productos\" {...a11yProps(2)} />\r\n          <Tab label=\"Cotizaciones por Perfil\" {...a11yProps(3)} />\r\n          <Tab label=\"Pólizas Emitidas por Productos\" {...a11yProps(4)} />\r\n          <Tab label=\"Pólizas Emitidas por Perfil\" {...a11yProps(5)} />\r\n          {/* <Tab label=\"Item Seven\" {...a11yProps(6)} /> */}\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <TabContent\r\n          titulo=\"Porcentajes Totales\"\r\n          url=\"/api/Ver_TotalesPira\"\r\n          urlGraph=\"/api/Ver_TotalesPira\"\r\n          urlGraph2=\"/api/Ver_CotizacionesPiraEmit\"\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <TabContent\r\n          titulo=\"Cotizaciones Piramide\"\r\n          url=\"/api/Ver_CotizacionesPira\"\r\n          urlGraph=\"/api/Ver_CotizacionesPira_Productos\"\r\n          urlGraph2=\"/api/Ver_CotizacionesPiraEmit\"\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <TabContent\r\n          titulo=\"Cotizaciones por Productos\"\r\n          url=\"/api/Ver_CotizacionesPira_Productos\"\r\n          urlGraph=\"/api/Ver_CotizacionesPira_Productos\"\r\n          urlGraph2=\"/api/Ver_CotizacionesPiraEmit\"\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={3}>\r\n        <TabContent\r\n          titulo=\"Cotizaciones por Perfil\"\r\n          url=\"/api/Ver_CotizacionesPira_Perfil\"\r\n          urlGraph=\"/api/Ver_CotizacionesPira_Perfil\"\r\n          urlGraph2=\"/api/Ver_CotizacionesPiraEmit\"\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={4}>\r\n        <TabContent\r\n          titulo=\"Cotizaciones Emitidas por Productos\"\r\n          url=\"/api/Ver_CotizacionesPiraEmit\"\r\n          urlGraph=\"/api/Ver_CotizacionesPiraEmit\"\r\n          urlGraph2=\"/api/Ver_CotizacionesPiraEmit\"\r\n        />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={5}>\r\n        <TabContent\r\n          titulo=\"Cotizaciones Emitidas por Perfil\"\r\n          url=\"/api/Ver_EmisionesPira_Perfil\"\r\n          urlGraph=\"/api/Ver_EmisionesPira_Perfil\"\r\n          urlGraph2=\"/api/Ver_EmisionesPira_Perfil\"\r\n        />\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\AppBar.js",["138","139","140","141","142","143","144","145","146","147"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport img from \"../logo-piramides.svg\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'; \r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport {withRouter} from \"react-router-dom\"\r\nimport Alert from \"./Alerta\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    // position: \"fixed\",\r\n    zIndex: 999999999999,\r\n    flexGrow: 1,\r\n    width: \"100%\",\r\n  },\r\n  menu: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n  },\r\n  img: {\r\n    width: 150,\r\n    // marginRight:700\r\n  },\r\n}));\r\n\r\nfunction ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n  const [auth, setAuth] = React.useState(true);\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n  const handleChange = (event) => {\r\n    setAuth(event.target.checked);\r\n  };\r\n  const handleClose = () => {\r\n\r\n    setAnchorEl(null);\r\n    sessionStorage.clear('DATA');\r\n    props.history.push(\"/\");\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar className={classes.menu}>\r\n          <img src={img} className=\"imgAppBar\" />\r\n\r\n          <div onClick={handleClose} className=\"salir\" style={{ marginLeft: \"40%\", cursor: \"pointer\", color: \"gray\" }}>\r\n            Salir\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ButtonAppBar)\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Tabs2.js",[],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Login.js",["148","149","150","151","152"],"import React, { useContext, useState } from \"react\";\r\nimport AuthContext from \"../Context/AuthContext/AuthContext\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Logo from \"../logo-piramides.svg\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport HttpsIcon from \"@material-ui/icons/Https\";\r\nimport { Button, TextField,InputAdornment,IconButton } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport axios from \"axios\";\r\nimport Alert from \"./Alerta\";\r\nimport Fade from '@material-ui/core/Fade';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: \"20px\",\r\n    width: \"100%\",\r\n  },\r\n  text: {\r\n    marginBottom: 25,\r\n  },\r\n  btn: {\r\n    // marginBottom: 30,\r\n    borderRadius: \"50px !important\",\r\n  },\r\n}));\r\n\r\nconst Login = (props) => {\r\n  const classes = useStyles();\r\n  const { login, userAuth,setUserAuth } = useContext(AuthContext);\r\n  const [user, setUser] = useState({ p_portal_username: \"\", p_pwd: \"\" });\r\n  const [open, setOpen] = React.useState(false); \r\n  const [msn, setMsn] = React.useState(\"\"); \r\n  const [shown, setShown] = React.useState(false);\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickShowPassword = () => setShown(!shown);\r\n  const handleMouseDownPassword = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n     // login(user);\r\n      // props.history.push(\"/app\");\r\n\r\n      try{\r\n        // setIsLoaded(false);\r\n        const res = await axios.post(\r\n          \"https://segurospiramide.com/asg-api/login\",\r\n          user\r\n        );\r\n      await sessionStorage.setItem(\"DATA_DASH\", JSON.stringify(res.data));\r\n      setUserAuth(JSON.parse(sessionStorage.getItem(\"DATA_DASH\")).user.PORTAL_USERNAME);\r\n      // setIsLoaded(true);\r\n      props.history.push(\"/app\")\r\n    } catch (error) {\r\n      if (error.response) {\r\n        if (error.response.status == 400) {\r\n          setOpen(true);\r\n          setMsn(\"Usuario o Contraseña incorrecta\")\r\n          props.history.push(\"/\");\r\n        } else {\r\n          // props.history.push(\"/app\");\r\n          console.log(error)\r\n        }\r\n      } else if (error.request) {\r\n        return error.request\r\n      } else {\r\n        return error.message\r\n      }\r\n    };\r\n\r\n  };\r\n\r\n  return (\r\n    <div className=\"fondo\">\r\n      <Alert open={open} setOpen={setOpen} handleClose={handleClose} msn={msn}/>\r\n      <Fade in={true} timeout={2000}>\r\n      <div id=\"formLogin\" style={{ display: \"grid\", placeItems:\"center\", marginTop:\"9%\"}}>\r\n     \r\n         \r\n          <form onSubmit={onSubmit} noValidate style={{ display: \"flex\", justifyContent: \"center\",alignItems:\"center\", flexDirection:\"column\", width:\"330px\" }} >\r\n            \r\n\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                flexDirection: \"column\",\r\n                width: \"100%\"\r\n              }}\r\n            >\r\n            <div style={{ display: \"grid\", placeItems: \"center\" }}>\r\n              <HttpsIcon fontSize=\"large\" style={{ color: \"#bd261e\" }} />\r\n              <img src={Logo} style={{ width: 180, marginTop: 10,marginLeft: -15 }} />\r\n            </div>\r\n              <div  style={{ marginTop: \"35px\", width: \"100%\", }}>\r\n              <TextField\r\n                label=\"Nombre de Usuario\"\r\n                type=\"text\"\r\n                name=\"p_portal_username\"\r\n                onChange={onChange}\r\n                // color=\"primary\"\r\n                // className={classes.root}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n              />\r\n              </div>\r\n              <div style={{ marginTop: \"20px\", marginBottom: 30,width: \"100%\", }}>\r\n              <TextField\r\n                label=\"Contraseña\"\r\n                type={shown ? 'text' : 'password'}\r\n                name=\"p_pwd\"\r\n                // color=\"primary\"\r\n                onChange={onChange}\r\n                // className={`${classes.root} ${classes.text}`}\r\n                style={{ width: \"100%\" }}\r\n                variant=\"outlined\"\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton\r\n                        onClick={handleClickShowPassword}\r\n                        onMouseDown={handleMouseDownPassword}\r\n                      >\r\n                        {shown ? <Visibility fontSize=\"small\" style={{ color: \"#bd261e\" }} /> : <VisibilityOff fontSize=\"small\" style={{ color: \"#bd261e\" }} />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n              </div>\r\n              <div>\r\n              <Button\r\n                type=\"submit\"\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.btn}\r\n                 style={{backgroundColor:\"#bd261e\" , marginBottom: 30, borderRadius: \"50% !important\",width: \"100%\"}}\r\n              >\r\n                Ingresar\r\n              </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n      </div>\r\n      </Fade>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n\r\n//style={{backgroundColor:\"#bd261e\" , marginBottom: 30, borderRadius: \"50\",width: \"100%\"}}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\hocs\\PrivateRoute.js",["153"],"import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n// import { AuthContext } from \"../Context/AuthContext\";\r\n\r\n//validando rutas segun si se esta logeado y si se tiene permiso segun el rol de usuario\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\r\n  //   const { isAuthenticated, user } = useContext(AuthContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!JSON.parse(sessionStorage.getItem(\"DATA_DASH\")))\r\n          return (\r\n            <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n          );\r\n        // if (!roles.includes(user.role))\r\n        // return (\r\n        //   <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\r\n        // );\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\hocs\\UnprivateRoute.js",["154"],"import React, { useContext } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\n//validando rutas segun si el usuario esta autenticado o no\r\nconst UnPrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (JSON.parse(sessionStorage.getItem(\"DATA_DASH\")))\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: \"/app\", state: { from: props.location } }}\r\n            />\r\n          );\r\n\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default UnPrivateRoute;\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\Context\\AuthContext\\AuthState.js",["155","156"],"import React, { useState, useEffect } from \"react\";\r\nimport AuthContext from \"./AuthContext\";\r\nimport axios from \"axios\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst AuthState = (props) => {\r\n  const [userAuth, setUserAuth] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [isLoaded, setIsLoaded] = useState(true);\r\n\r\n  const login = async (user) => {\r\n    try{\r\n    // setIsLoaded(false);\r\n    const res = await axios.post(\r\n      \"https://segurospiramide.com/asg-api/login\",\r\n      user\r\n    );\r\n    await sessionStorage.setItem(\"DATA_DASH\", JSON.stringify(res.data));     \r\n    setUserAuth(JSON.parse(sessionStorage.getItem(\"DATA_DASH\")).user.PORTAL_USERNAME);\r\n    // setIsLoaded(true);\r\n  } catch (error) {\r\n    if(error.response){\r\n      if(error.response.status == 400){\r\n        alert(\"Usuario o Contrasena incorrecta\")\r\n        props.history.push(\"/\");\r\n      } else{\r\n        //props.history.push(\"/app\");\r\n      }\r\n    }else if(error.request){\r\n      return error.request\r\n    }else{\r\n      return error.message\r\n    }\r\n\r\n    // console.log(res);\r\n  };\r\n}\r\n  useEffect(() => {\r\n    if (JSON.parse(sessionStorage.getItem(\"DATA_DASH\"))) {\r\n      setUserAuth(\r\n        JSON.parse(sessionStorage.getItem(\"DATA_DASH\")).user.PORTAL_USERNAME\r\n      );\r\n      setIsLoaded(true);\r\n    }\r\n  }, [userAuth]);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded ? (\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            height: \"80vh\",\r\n            alignItems: \"center\",\r\n          }}\r\n      \r\n        >\r\n          <CircularProgress\r\n            style={{\r\n              color: \"#bd261e\"\r\n            }} />\r\n        </div>\r\n      ) : (\r\n        <AuthContext.Provider\r\n          value={{\r\n            login,\r\n            userAuth,\r\n            setUserAuth,\r\n            token,\r\n          }}\r\n        >\r\n          {props.children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthState;\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\TabContent.js",["157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203","204","205"],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\Context\\AuthContext\\AuthContext.js",[],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Exportarexcel.js",["206","207","208"],"import React, { useState, useEffect } from \"react\";\r\nimport ExportExcel from \"react-export-excel\";\r\nimport excel from \"../excel1.svg\"\r\nimport { ButtonBase } from \"@material-ui/core\";\r\n\r\nconst ExcelFile = ExportExcel.ExcelFile;\r\nconst ExcelSheet = ExportExcel.ExcelSheet;\r\nconst ExcelColumn = ExportExcel.ExcelColumn;\r\n\r\nfunction Exportarexcel({ enviarjsonGrid, titulo }) {\r\n\r\n  return (\r\n    <div className=\"btnExportarExcel\">\r\n      <ExcelFile\r\n        element={\r\n        <ButtonBase style={{marginTop:\"10px\"}} >\r\n          <img src={excel} style={{width:\"30px\"}}  />\r\n          <span style={{color:\"green\", fontSize:11}}>DESCARGAR EXCEL</span>\r\n        </ButtonBase>\r\n        }\r\n        filename={titulo}\r\n      >\r\n        <ExcelSheet data={enviarjsonGrid} name={titulo}>\r\n          {enviarjsonGrid[0] && Object.keys(enviarjsonGrid[0]).map(columna => (\r\n            <ExcelColumn label={columna} value={columna} />\r\n          ))}\r\n        </ExcelSheet>\r\n      </ExcelFile>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Exportarexcel;\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridCotProdOcea.js",["209"],"import React, { useEffect, useState, useStyles } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\n\r\nconst columns = [\r\n  { field: \"AREA\", headerName: \"Área\", width: 200, fontSize: \"18px\" },\r\n  {\r\n    field: \"COTIZACIONES\",\r\n    headerName: \"Polizas\",\r\n    width: 120,\r\n    type: \"number\",\r\n  },\r\n ];\r\n\r\nexport default function App({ enviardataGrid }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"prod ocea\" + enviardataGrid);\r\n\r\n    var ArrCotizaciones = enviardataGrid.map((item) => {\r\n      // var fecha_ini = item.DATE_CREATION.substring(0, 10);\r\n\r\n      //  var fecha = moment(fecha_ini, 'YYYY-MM-DD', true).format(\"DD/MM/YYYY\");\r\n      return {\r\n        id: item.COTIZACIONES,\r\n        COTIZACIONES: item.COTIZACIONES,\r\n        AREA: item.AREA,\r\n      };\r\n    });\r\n\r\n    setRows(ArrCotizaciones);\r\n  }, [enviardataGrid]);\r\n\r\n  function CustomPagination(props) {\r\n    const { state, api } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Pagination\r\n        className={classes.root}\r\n        color=\"primary\"\r\n        page={state.pagination.page}\r\n        count={state.pagination.pageCount}\r\n        onChange={(event, value) => api.current.setPage(value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  CustomPagination.propTypes = {\r\n    /**\r\n     * ApiRef that let you manipulate the grid.\r\n     */\r\n    api: PropTypes.shape({\r\n      current: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    /**\r\n     * The GridState object containing the current grid state.\r\n     */\r\n    state: PropTypes.object.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div id=\"GridCotProd\" style={{ height: 300 }}>\r\n      <XGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pagination\r\n        pageSize={5}\r\n        rowsPerPageOptions={[10, 20, 30]}\r\n        showToolbar\r\n        density=\"compact\"\r\n        // filterModel={{\r\n        //   items: [\r\n\r\n        //   ],\r\n        // }}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridCotOceaPerfil.js",["210"],"import React, { useEffect, useState, useStyles } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\n\r\nconst columns = [\r\n  { field: \"PERFIL\", headerName: \"Perfil\", width: 170, fontSize: \"18px\" },\r\n  {\r\n    field: \"COTIZACIONES\",\r\n    headerName: \"Cotizaciones\",\r\n    width: 140,\r\n    type: \"number\",\r\n  },\r\n];\r\n\r\nexport default function App({ enviardataGrid }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"prod ocea\" + enviardataGrid);\r\n\r\n    var ArrCotizaciones = enviardataGrid.map((item) => {\r\n      // var fecha_ini = item.DATE_CREATION.substring(0, 10);\r\n\r\n      //  var fecha = moment(fecha_ini, 'YYYY-MM-DD', true).format(\"DD/MM/YYYY\");\r\n      return {\r\n        id: item.COTIZACIONES,\r\n        COTIZACIONES: item.COTIZACIONES,\r\n        PERFIL: item.PERFIL,\r\n      };\r\n    });\r\n\r\n    setRows(ArrCotizaciones);\r\n  }, [enviardataGrid]);\r\n\r\n  function CustomPagination(props) {\r\n    const { state, api } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Pagination\r\n        className={classes.root}\r\n        color=\"primary\"\r\n        page={state.pagination.page}\r\n        count={state.pagination.pageCount}\r\n        onChange={(event, value) => api.current.setPage(value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  CustomPagination.propTypes = {\r\n    /**\r\n     * ApiRef that let you manipulate the grid.\r\n     */\r\n    api: PropTypes.shape({\r\n      current: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    /**\r\n     * The GridState object containing the current grid state.\r\n     */\r\n    state: PropTypes.object.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div id=\"GridCotProd\" style={{ height: 300 }}>\r\n      <XGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pagination\r\n        pageSize={5}\r\n        rowsPerPageOptions={[10, 20, 30]}\r\n        showToolbar\r\n        density=\"compact\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridPorcTotal.js",["211"],"import React, { useEffect, useState, useStyles } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\n\r\nconst columns = [\r\n  {\r\n    field: \"id\",\r\n    headerName: \"Total Cotizaciones\",\r\n    width: 180,\r\n    fontSize: \"18px\",\r\n  },\r\n  {\r\n    field: \"COTIZACIONES_EMITIDAS\",\r\n    headerName: \"Emitidas\",\r\n    width: 120,\r\n    type: \"number\",\r\n  },\r\n  {\r\n    field: \"COTIZACIONES_NO_EMITIDAS\",\r\n    headerName: \"No Emitidas\",\r\n    width: 140,\r\n    type: \"number\",\r\n    display: \"none\",\r\n  },\r\n\r\n];\r\n\r\nexport default function App({ enviardataGrid }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"prod ocea\" + enviardataGrid);\r\n\r\n    var ArrCotizaciones = enviardataGrid.map((item) => {\r\n      // var fecha_ini = item.DATE_CREATION.substring(0, 10);\r\n\r\n      //  var fecha = moment(fecha_ini, 'YYYY-MM-DD', true).format(\"DD/MM/YYYY\");\r\n      return {\r\n        id: item.TOTAL_COTIZACIONES,\r\n        TOTAL_COTIZACIONES: item.TOTAL_COTIZACIONES,\r\n        COTIZACIONES_EMITIDAS: item.COTIZACIONES_EMITIDAS,\r\n        PORC_COT_EMITIDAS: item.PORC_COT_EMITIDAS,\r\n        COTIZACIONES_NO_EMITIDAS: item.COTIZACIONES_NO_EMITIDAS,\r\n        PORC_COT_NO_EMITIDAS: item.PORC_COT_NO_EMITIDAS,\r\n      };\r\n    });\r\n\r\n    setRows(ArrCotizaciones);\r\n  }, [enviardataGrid]);\r\n\r\n  function CustomPagination(props) {\r\n    const { state, api } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Pagination\r\n        className={classes.root}\r\n        color=\"primary\"\r\n        page={state.pagination.page}\r\n        count={state.pagination.pageCount}\r\n        onChange={(event, value) => api.current.setPage(value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  CustomPagination.propTypes = {\r\n   \r\n    api: PropTypes.shape({\r\n      current: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n  \r\n    state: PropTypes.object.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div id=\"GridCotProd\" style={{ height: 300, width: \"100%\" }}>\r\n      <XGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pagination\r\n        pageSize={5}\r\n        rowsPerPageOptions={[10, 20, 30]}\r\n        showToolbar\r\n        density=\"compact\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridEmiOceaPerfil.js",["212"],"import React, { useEffect, useState, useStyles } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport moment from \"moment\";\r\nimport PropTypes from \"prop-types\";\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\n\r\nconst columns = [\r\n  { field: \"PERFIL\", headerName: \"Perfil\", width: 200, fontSize: \"18px\" },\r\n  {\r\n    field: \"COTIZACIONES\",\r\n    headerName: \"Pólizas\",\r\n    width: 100,\r\n    type: \"number\",\r\n  },\r\n];\r\n\r\nexport default function App({ enviardataGrid }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"prod ocea\" + enviardataGrid);\r\n\r\n    var ArrCotizaciones = enviardataGrid.map((item) => {\r\n\r\n      return {\r\n        id: item.COTIZACIONES,\r\n        COTIZACIONES: item.COTIZACIONES,\r\n        PERFIL: item.PERFIL,\r\n      };\r\n    });\r\n\r\n    setRows(ArrCotizaciones);\r\n  }, [enviardataGrid]);\r\n\r\n  function CustomPagination(props) {\r\n    const { state, api } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Pagination\r\n        className={classes.root}\r\n        color=\"primary\"\r\n        page={state.pagination.page}\r\n        count={state.pagination.pageCount}\r\n        onChange={(event, value) => api.current.setPage(value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  CustomPagination.propTypes = {\r\n    /**\r\n     * ApiRef that let you manipulate the grid.\r\n     */\r\n    api: PropTypes.shape({\r\n      current: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    /**\r\n     * The GridState object containing the current grid state.\r\n     */\r\n    state: PropTypes.object.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div id=\"GridCotProd\" style={{ height: 300 }}>\r\n      <XGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pagination\r\n        pageSize={5}\r\n        rowsPerPageOptions={[10, 20, 30]}\r\n        showToolbar\r\n        density=\"compact\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridDivisEfec.js",["213","214","215","216","217","218","219","220","221","222"],"import React, { useEffect, useState, useStyles } from \"react\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\nimport PropTypes from \"prop-types\";\r\nimport { XGrid } from \"@material-ui/x-grid\";\r\n\r\nvar columns = []\r\nexport default function App({ enviardataGrid,valor,dtosAgencias }) {\r\n  const [rows, setRows] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if(valor == \"Recaudación Divisas - Efectivo - Faltantes y Sobrantes\"){\r\n      var ArrCotizaciones = enviardataGrid.map((item, index) => {\r\n        return {\r\n          id: index,\r\n          CODIGO_OFICINA: item.CODIGO_OFICINA,\r\n          OFICINA: item.OFICINA,\r\n          FECHA_INGRESO: item.FECHA_INGRESO,\r\n           MONEDA: item.MONEDA,\r\n          NRO_INGRESO: item.NRO_INGRESO,\r\n          TIPO_DOCUMENTO: item.TIPO_DOCUMENTO,\r\n          MTO_LOCAL: item.MTO_LOCAL,\r\n          MTO_MONEDA: item.MTO_MONEDA,\r\n          NRO_ACRE_FALTANTE: item.NRO_ACRE_FALTANTE,\r\n          MTO_FALTANTE: item.MTO_FALTANTE,\r\n          NRO_OBLIG_SOBRANTE: item.NRO_OBLIG_SOBRANTE,\r\n          MTO_SOBRANTE: item.MTO_SOBRANTE,\r\n          CLIENTE: item.CLIENTE,\r\n        };\r\n      });\r\n  // alert(JSON.stringify(ArrCotizaciones))\r\n      setRows(ArrCotizaciones);\r\n\r\n      columns = [\r\n        {\r\n          field: \"CODIGO_OFICINA\",\r\n          headerName: \"Código Oficina\",\r\n          width: 100,\r\n        },\r\n        {\r\n          field: \"OFICINA\",\r\n          headerName: \"Oficina\",\r\n          width: 100,\r\n         \r\n        },\r\n        {\r\n          field: \"FECHA_INGRESO\",\r\n          headerName: \"Fecha Ingreso\",\r\n          width: 100,\r\n       \r\n        },\r\n        {\r\n          field: \"MONEDA\",\r\n          headerName: \"Moneda\",\r\n          width: 100,\r\n          type: \"number\",\r\n        },\r\n        {\r\n          field: \"NRO_INGRESO\",\r\n          headerName: \"Nro Ingreso\",\r\n          width: 100,\r\n          type: \"string\",\r\n        },\r\n        {\r\n          field: \"TIPO_DOCUMENTO\",\r\n          headerName: \"Tipo Documento\",\r\n          width: 100,\r\n          type: \"number\",\r\n        },\r\n        {\r\n          field: \"MTO_LOCAL\",\r\n          headerName: \"Monto Local\",\r\n          width: 100,\r\n          type: \"number\",\r\n        }\r\n        ,\r\n        {\r\n          field: \"MTO_MONEDA\",\r\n          headerName: \"Monto Moneda $\",\r\n          width: 100,\r\n          type: \"number\",\r\n        },\r\n        {\r\n          field: \"NRO_ACRE_FALTANTE\",\r\n          headerName: \"Nro Acre. Faltante\",\r\n          width: 100,\r\n          type: \"string\",\r\n        },\r\n        {\r\n          field: \"MTO_FALTANTE\",\r\n          headerName: \"Monto Faltante $\",\r\n          width: 100,\r\n          type: \"number\",\r\n        },\r\n        {\r\n          field: \"NRO_OBLIG_SOBRANTE\",\r\n          headerName: \"Nro Oblig Sobrante $\",\r\n          width: 100,\r\n          type: \"string\",   \r\n        },\r\n        {\r\n          field: \"MTO_SOBRANTE\",\r\n          headerName: \"Monto Sobrante $\",\r\n          width: 100,\r\n          type: \"number\",\r\n        },\r\n        {\r\n          field: \"CLIENTE\",\r\n          headerName: \"Cliente\",\r\n          width: 100,\r\n\r\n        }\r\n      ]\r\n\r\n\r\n    }else if(valor == \"Recaudo de Divisas en Efectivo\"){\r\n      \r\n            var ArrCotizaciones = enviardataGrid.map((item, index) => {\r\n              return {\r\n                id: index,\r\n                OFICINA: item.OFICINA,\r\n                MTO_MONEDA: item.MTO_MONEDA,\r\n              };\r\n            });\r\n        \r\n            setRows(ArrCotizaciones);\r\n      columns = [\r\n        {\r\n          field: \"OFICINA\",\r\n          headerName: \"Oficina\",\r\n          width: 150,\r\n        },\r\n        {\r\n          field: \"MTO_MONEDA\",\r\n          headerName: \"Monto Divisa $\",\r\n          width: 170,\r\n          type: \"number\",\r\n        }\r\n      ]\r\n    }else if(valor == \"Recaudación Divisas - Efectivo - Faltantes\"){\r\n      \r\n      var ArrCotizaciones = enviardataGrid.map((item, index) => {\r\n        return {\r\n          id: index,\r\n          OFICINA: item.OFICINA,\r\n          MTO_FALTANTE: item.MTO_FALTANTE,\r\n        };\r\n      });\r\n  \r\n      setRows(ArrCotizaciones);\r\n      columns = [\r\n\r\n        {\r\n          field: \"OFICINA\",\r\n          headerName: \"Oficina\",\r\n          width: 150,\r\n        },\r\n        {\r\n          field: \"MTO_FALTANTE\",\r\n          headerName: \"Monto Faltante $\",\r\n          width: 170,\r\n          type: \"number\",\r\n        }\r\n      ]\r\n    }else if(valor == \"Recaudación Divisas-Efectivo-Sobrantes\"){\r\n          \r\n      var ArrCotizaciones = enviardataGrid.map((item, index) => {\r\n        return {\r\n          id: index,\r\n          // CODOFICINA: item.CODOFICINA,\r\n          OFICINA: item.OFICINA,\r\n          MTO_SOBRANTE: item.MTO_SOBRANTE\r\n        }\r\n      })\r\n\r\n      setRows(ArrCotizaciones);\r\n      columns = [\r\n\r\n        {\r\n          field: \"OFICINA\",\r\n          headerName: \"Oficina\",\r\n          width: 150,\r\n        },\r\n        {\r\n          field: \"MTO_SOBRANTE\",\r\n          headerName: \"Monto Sobrante $\",\r\n          width: 170,\r\n          type: \"number\",\r\n        }\r\n      ]\r\n    }else if(valor == \"Efectivo / Sobrantes / Faltantes\"){\r\n\r\n      var ArrCotizaciones = enviardataGrid.map((item, index) => {\r\n        return {\r\n          id: item.CODIGO_OFICINA,\r\n          OFICINA: item.OFICINA,\r\n          MTO_MONEDA: item.MTO_MONEDA,\r\n          MTO_FALTANTE: item.MTO_FALTANTE,\r\n          MTO_SOBRANTE: item.MTO_SOBRANTE,\r\n        };\r\n      });\r\n\r\n      setRows(ArrCotizaciones);\r\n      columns = [\r\n        {\r\n          field: \"OFICINA\",\r\n          headerName: \"Oficina\",\r\n          width: 150,\r\n        },\r\n        {\r\n          field: \"MTO_MONEDA\",\r\n          headerName: \"Monto Moneda\",\r\n          width: 170,\r\n          type: \"number\",\r\n        },\r\n        {\r\n          field: \"MTO_FALTANTE\",\r\n          headerName: \"Monto Faltante\",\r\n          width: 170,\r\n          type: \"number\",\r\n        },\r\n        {\r\n          field: \"MTO_SOBRANTE\",\r\n          headerName: \"Monto Sobrante\",\r\n          width: 170,\r\n          type: \"number\",\r\n        }\r\n      ]\r\n}\r\n  }, []);\r\n\r\n  function CustomPagination(props) {\r\n    const { state, api } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n      <Pagination\r\n        className={classes.root}\r\n        color=\"primary\"\r\n        page={state.pagination.page}\r\n        count={state.pagination.pageCount}\r\n        onChange={(event, value) => api.current.setPage(value)}\r\n      />\r\n    );\r\n  }\r\n\r\n  CustomPagination.propTypes = {\r\n    /**\r\n     * ApiRef that let you manipulate the grid.\r\n     */\r\n    api: PropTypes.shape({\r\n      current: PropTypes.object.isRequired,\r\n    }).isRequired,\r\n    /**\r\n     * The GridState object containing the current grid state.\r\n     */\r\n    state: PropTypes.object.isRequired,\r\n  };\r\n\r\n  return (\r\n    <div style={{ height: 800, width: \"100%\" }}>\r\n      <XGrid\r\n        rows={rows}\r\n        columns={columns}\r\n        pagination={true}\r\n        pageSize={19}\r\n        rowsPerPageOptions={[19, 20, 30]}\r\n        showToolbar\r\n        density=\"compact\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\tablas\\GridCotOcea.js",[],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\Grafico.js",["223","224"],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\GraficaCotiVsEm.js",["225","226"],"import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nvar encabezado1 = '';\r\nvar encabezado2 = '';\r\nvar valor1\r\nvar valor2\r\nvar a = [[encabezado1, encabezado2], [encabezado1, valor1], [encabezado2, valor2]]\r\n\r\nconst pieOptions = {\r\n  title: \"\",\r\n  pieHole: 0.6,\r\n  slices: [\r\n    {\r\n      color: \"#2BB673\"\r\n    },\r\n    {\r\n      color: \"#d91e48\"\r\n    },\r\n    {\r\n      color: \"#007fad\"\r\n    },\r\n    {\r\n      color: \"#e9a227\"\r\n    }\r\n  ],\r\n  legend: {\r\n    position:  \"bottom\",\r\n    alignment: \"center\",\r\n    textStyle: {\r\n      color: \"233238\",\r\n      fontSize: 14\r\n    }\r\n  },\r\n  tooltip: {\r\n    showColorCode: true\r\n  },\r\n  chartArea: {\r\n    left: 0,\r\n    top: 30,\r\n    width: \"80%\",\r\n    height: \"80%\"\r\n  },\r\n  fontName: \"Roboto\"\r\n};\r\nexport default function GraficaPrueba({ enviardataGraph }) {\r\n\r\n  const [json, setJson] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    setJson(enviardataGraph)\r\n    encabezado1 = \"COTIZACIONES_EMITIDAS\";\r\n    encabezado2 = \"COTIZACIONES_NO_EMITIDAS\";\r\n    valor1 = enviardataGraph[0].COTIZACIONES_EMITIDAS;\r\n    valor2 = enviardataGraph[0].COTIZACIONES_NO_EMITIDAS;\r\n    a = [[encabezado1, encabezado2], [encabezado1, valor1], [encabezado2, valor2]]\r\n\r\n  }, [enviardataGraph])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Chart\r\n        width={'390px'}\r\n        height={'250px'}\r\n        chartType=\"PieChart\"\r\n        data={a}\r\n        options={pieOptions}\r\n        graph_id=\"PieChart\"\r\n        options={{\r\n          chartArea:{left:20,top:40,width:'90%',height:'75%'},\r\n          legend: { position: 'bottom',textStyle: {color: 'black', fontSize: 9} },\r\n          title: 'Cotizaciones Emitidas vs No Emitidas',\r\n          slices: [{offset : 0.1}],\r\n          titleTextStyle:{ fontSize: 16, color:'gray'},\r\n          is3D: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\Graficoproductos.js",["227","228","229","230","231"],"import React, { useEffect, useState } from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nvar encabezados1 = '';\r\nvar encabezaValor = '';\r\n var dataGraf = [encabezados1,encabezaValor]\r\n\r\nconst pieOptions = {\r\n  title: \"\",\r\n  pieHole: 0.6,\r\n  slices: [\r\n    {\r\n      color: \"#2BB673\"\r\n    },\r\n    {\r\n      color: \"#d91e48\"\r\n    },\r\n    {\r\n      color: \"#007fad\"\r\n    },\r\n    {\r\n      color: \"#e9a227\"\r\n    }\r\n  ],\r\n  legend: {\r\n    position:  \"bottom\",\r\n    alignment: \"center\",\r\n    textStyle: {\r\n      color: \"233238\",\r\n      fontSize: 14\r\n    }\r\n  },\r\n  tooltip: {\r\n    showColorCode: true\r\n  },\r\n  chartArea: {\r\n    left: 0,\r\n    top: 30,\r\n    width: \"80%\",\r\n    height: \"80%\"\r\n  },\r\n  fontName: \"Roboto\"\r\n};\r\nexport default function GraficaPrueba({ enviardataGraph }) {\r\n\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n\r\n    //Arreglo de encabezados\r\n    var encabezados1= enviardataGraph.map((cot) => {\r\n      return cot.AREA.substring(14)\r\n    });\r\n    // encabezados1=encabezados;\r\n    // dataGraf.push(encabezados)\r\n\r\n    enviardataGraph.map((cot) => {\r\n       var valores = [cot.AREA.substring(14),cot.COTIZACIONES]\r\n       dataGraf.push(valores)\r\n    });\r\n\r\n\r\n    console.log(dataGraf);\r\n    // setData(a)\r\n    // encabezado1 = \"COTIZACIONES_EMITIDAS\";\r\n    // encabezado2 = \"COTIZACIONES_NO_EMITIDAS\";\r\n    // valor1 = enviardataGraph[0].COTIZACIONES_EMITIDAS;\r\n    // valor2 = enviardataGraph[0].COTIZACIONES_NO_EMITIDAS;\r\n    // a = [[encabezado1, encabezado2], [encabezado1, valor1], [encabezado2, valor2]]\r\n\r\n  }, [enviardataGraph])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Chart\r\n        width={'390px'}\r\n        height={'250px'}\r\n        chartType=\"PieChart\"\r\n        // data={a}\r\n        options={pieOptions}\r\n        graph_id=\"PieChart\"\r\n        options={{\r\n          chartArea:{left:20,top:40,width:'80%',height:'75%'},\r\n          legend: { position: 'bottom',textStyle: {color: 'black', fontSize: 9} },\r\n          title: 'Cotizaciones Emitidas vs No Emitidas',\r\n          slices: [{offset : 0.1}],\r\n          titleTextStyle:{ fontSize: 16, color:'gray'},\r\n          is3D: true,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\n\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\GrafMtoFaltSobr.js",[],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\GraficoBar.js",["232"],"import Chart from \"react-google-charts\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import \"../../css/Tabs.css\";\r\n\r\nfunction App({ enviardataGraph, valor, enviardataGrid }) {\r\n  const [json, setJson] = useState([]);\r\n  const [title, setTitle] = useState(valor);\r\n  useEffect(() => {\r\n\r\n    if (valor === \"Recaudo de Divisas en Efectivo\") {\r\n      const chartData = [['OFICINA', 'MTO_MONEDA', { role: 'style', format: 'currency' }, { sourceColumn: 2, role: 'annotation', type: 'number', calc: 'stringify' }]]\r\n      for (let i = 0; i < enviardataGraph.length; i += 1) {\r\n        chartData.push([enviardataGraph[i].OFICINA, enviardataGraph[i].MTO_MONEDA, 'fill-color:#ff9100;stroke-color: #e65100;stroke-width: 2 , font-size:20px', enviardataGraph[i].MTO_MONEDA])\r\n      }\r\n      setJson(chartData);\r\n      setTitle(valor)\r\n    } else if (valor === \"Recaudación Divisas-Efectivo-Sobrantes\") {\r\n      const chartData = [['OFICINA', 'MTO_SOBRANTE', { role: 'style' }, { sourceColumn: 2, role: 'annotation', type: 'number', calc: 'stringify', }]]\r\n      for (let i = 0; i < enviardataGraph.length; i += 1) {\r\n        chartData.push([enviardataGraph[i].OFICINA, enviardataGraph[i].MTO_SOBRANTE, 'fill-color:#ff9100;stroke-color: #e65100;stroke-width: 2 ', enviardataGraph[i].MTO_SOBRANTE])\r\n      }\r\n      setJson(chartData);\r\n      setTitle(valor)\r\n    }\r\n    else if (valor === \"Recaudación Divisas - Efectivo - Faltantes\") {\r\n      const chartData = [['OFICINA', 'MTO_FALTANTE', { role: 'style' }, { sourceColumn: 2, role: 'annotation', type: 'number', calc: 'stringify', }]]\r\n      for (let i = 0; i < enviardataGraph.length; i += 1) {\r\n        chartData.push([enviardataGraph[i].OFICINA, enviardataGraph[i].MTO_FALTANTE, 'fill-color:#ff9100;stroke-color: #e65100;stroke-width: 2 ', enviardataGraph[i].MTO_FALTANTE])\r\n      }\r\n      setJson(chartData);\r\n      setTitle(valor)\r\n    }\r\n    else if (valor === \"Efectivo / Sobrantes / Faltantes\") {\r\n      const chartData = [\r\n        ['OFICINA', 'MTO_MONEDA', 'MTO_SOBRANTE', 'MTO_FALTANTE',\r\n          // { role: 'style' }, \r\n          // { role: 'style' }, \r\n          // { role: 'style' }, \r\n          // {sourceColumn: 2, role: 'annotation', type: 'number', calc: 'stringify',},\r\n          // {sourceColumn: 2, role: 'annotation', type: 'number', calc: 'stringify',},\r\n          // {sourceColumn: 2, role: 'annotation', type: 'number', calc: 'stringify',},\r\n        ]\r\n      ]\r\n      // alert(JSON.stringify(enviardataGraph))\r\n      for (let i = 0; i < enviardataGrid.length; i += 1) {\r\n        chartData.push([\r\n          enviardataGrid[i].OFICINA,\r\n          enviardataGrid[i].MTO_MONEDA,\r\n          enviardataGrid[i].MTO_SOBRANTE,\r\n          enviardataGrid[i].MTO_FALTANTE,\r\n          // ,'fill-color:#ff9100;stroke-color: #e65100;stroke-width: 2 ',\r\n          // ,'fill-color:#ff9100;stroke-color: #e65100;stroke-width: 2 ',\r\n          // ,'fill-color:#ff9100;stroke-color: #e65100;stroke-width: 2 ',\r\n          // enviardataGrid[i].MTO_MONEDA,\r\n          // enviardataGrid[i].MTO_SOBRANTE, \r\n          // enviardataGrid[i].MTO_FALTANTE\r\n        ])\r\n      }\r\n      setJson(chartData);\r\n      setTitle(valor)\r\n    }\r\n\r\n  }, [enviardataGraph,valor])\r\n \r\n  return (\r\n    <div style={{ marginTop: -8 }}>\r\n      {/* {valor === \"Recaudo de Divisas en Efectivo\" ? (\r\n        <>\r\n          <b>{valor}</b> \r\n        </>\r\n      ) : valor === \"Recaudación Divisas-Efectivo-Sobrantes\" ? (\r\n        <>\r\n          <b>{valor}</b> \r\n        </>\r\n      ): valor === \"Recaudación Divisas - Efectivo - Faltantes\" ? (\r\n        <>\r\n          <b>{valor}</b>\r\n        </>\r\n      ): valor === \"Efectivo / Sobrantes / Faltantes\" ? (\r\n        <>\r\n          <b>{valor}</b>\r\n        </>\r\n      ): (\r\n            <>\r\n              <b></b> \r\n            </>\r\n          )\r\n      }  */}\r\n      {valor === \"Efectivo / Sobrantes / Faltantes\" ? (\r\n        <>\r\n          <div style={{ marginLeft: '0px' }}>\r\n            {/* <Chart\r\n            width={'500px'}\r\n            height={'300px'}\r\n            chartType=\"Bar\"\r\n            loader={<div>Cargando Gráfica...</div>}\r\n            data={json}\r\n              // [\r\n              //   ['', 'Mto. Moneda', 'Faltante', 'Sobrante'],\r\n              //   ['', 1000, 400, 200]\r\n              // ]\r\n              options={{\r\n                // Material design options\r\n                chart: {\r\n                  title: 'Efectivo / Sobrantes / Faltantes',\r\n                  // subtitle: 'Sales, Expenses, and Profit: 2014-2017',\r\n                },\r\n                hAxis: {\r\n                  title: 'MONTO DIVISAS',\r\n                  titleTextStyle: { color: '#dd2c00', fontSize: 16, fontStyle: 'normal', italic: \"false\" },\r\n                  textStyle: {\r\n                    fontSize: 10\r\n                  },\r\n                  minValue: 0,\r\n                },\r\n                vAxis: {\r\n                  // title: 'OFICINAS',\r\n                  format: 'currency',\r\n                  textStyle: {\r\n                    fontSize: 10\r\n                  },\r\n                  titleTextStyle: { color: '#dd2c00', fontSize: 16, italic: \"false\" },\r\n\r\n                }\r\n              }}\r\n            />  */}\r\n            <Chart\r\n              width={'100%'}\r\n              chartLanguage=\"es\"\r\n              height={'800px'}\r\n              chartType=\"BarChart\"\r\n              loader={<div>Cargando Gráfica...</div>}\r\n              data={json}\r\n              options={{\r\n                legend: { position: \"none\" },\r\n                title: 'Efectivo / Sobrantes / Faltantes',\r\n                chartArea: { width: '70%',height: \"80%\" , //65%\r\n                backgroundColor: '#eceff1'  },\r\n                hAxis: {\r\n                  title: 'Monto $',\r\n                  minValue: 0,\r\n                  textStyle: {\r\n                    fontSize: 9\r\n                  },\r\n                },\r\n                vAxis: {\r\n                  title: 'Sucursal',\r\n                  textStyle: {\r\n                    fontSize: 9\r\n                  },\r\n                },\r\n              }}\r\n              // For tests\r\n              rootProps={{ 'data-testid': '1' }}\r\n            />\r\n          </div>\r\n\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Chart\r\n            width={'100%'}//50%\r\n            //height={'800px'}//800px\r\n            chartLanguage=\"es\"\r\n            chartType=\"BarChart\"\r\n            loader={<div>Cargando Gráfica...</div>}\r\n            data={json}\r\n\r\n            options={{\r\n              width: \"100%\",//750\r\n              height: 800,//800\r\n              title: {title},\r\n              titleTextStyle: { color: '#455a64', fontSize: 18, float: 'right' },\r\n              is3D: 'true',\r\n              chartArea: { \r\n                width: '70%', //65%\r\n                height:\"80%\",\r\n                backgroundColor: '#eceff1' \r\n              },\r\n              legend: { position: \"none\" },\r\n              hAxis: {\r\n                title: 'MONTO DIVISAS',\r\n                titleTextStyle: { color: '#dd2c00', fontSize: 16, fontStyle: 'normal', italic: \"false\" },\r\n                textStyle: {\r\n                  fontSize: 10\r\n                },\r\n                minValue: 0,\r\n              },\r\n              vAxis: {\r\n                title: 'OFICINAS',\r\n                format: 'currency',\r\n                textStyle: {\r\n                  fontSize: 10\r\n                },\r\n                titleTextStyle: { color: '#dd2c00', fontSize: 16, italic: \"false\" },\r\n                gridlines: { count: 12 }\r\n              },\r\n            }}\r\n            // For tests\r\n            rootProps={{ 'data-testid': '1' }}\r\n          />\r\n        </>\r\n\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\graficos\\Graficoprodperfil.js",["233"],"// import React, { useState, useEffect } from \"react\";\r\n// import { Pie } from \"@reactchartjs/react-chart.js\";\r\n\r\n// const PieChart = ({ enviardataGraph }) => {\r\n//   const [rows, setRows] = useState([]);\r\n//   const [areas, setAreas] = useState([]);\r\n//   const [total, setTotal] = useState(0);\r\n\r\n//   const data = {\r\n//     labels: areas,\r\n\r\n//     datasets: [\r\n//       {\r\n//         // label: 'Cotizaciones Productos',\r\n//         data: rows,\r\n//         options: {\r\n//           legend: {\r\n//             display: true,\r\n//             labels: {\r\n//               fontColor: \"red\",\r\n//               fontSize: \"20px\",\r\n//             },\r\n//           },\r\n//         },\r\n\r\n//         backgroundColor: [\"#2980B9\", \"#2E8B57\", \"#F9D120\", \"red\", \"#8FBC8F\"],\r\n//         borderColor: [\"#2980B9\", \"#2E8B57\", \"#F9D120\", \"red\", \"#8FBC8F\"],\r\n//         borderWidth: 1,\r\n//       },\r\n//     ],\r\n//     options: {\r\n//       title: {\r\n//         display: true,\r\n//         text: \"Título del gráfico\",\r\n//       },\r\n//     },\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     // console.log('desde el graph values:  ' + JSON.stringify(enviardataGraph));\r\n//     const nums = enviardataGraph.map((cot) => cot.COTIZACIONES);\r\n//     const Arrperfiles = enviardataGraph.map((cot) => cot.PERFIL);\r\n//     console.log(\"Perfiles \" + Arrperfiles);\r\n//     setRows(nums);\r\n//     setAreas(Arrperfiles);\r\n//     let total = nums.reduce((a, b) => a + b, 0);\r\n//     setTotal(total);\r\n//   }, [enviardataGraph]);\r\n\r\n//   return (\r\n//     <div className=\"chartPie\">\r\n//       <b>Total:</b> {total}\r\n//       <Pie data={data} />\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PieChart;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Chart from \"react-google-charts\";\r\n\r\nconst pieOptions = {\r\n  title: \"\",\r\n  pieHole: 0.6,\r\n  slices: [\r\n    {\r\n      color: \"#2BB673\"\r\n    },\r\n    {\r\n      color: \"#d91e48\"\r\n    },\r\n    {\r\n      color: \"#007fad\"\r\n    },\r\n    {\r\n      color: \"#e9a227\"\r\n    }\r\n  ],\r\n  legend: {\r\n    position: \"bottom\",\r\n    alignment: \"center\",\r\n    textStyle: {\r\n      color: \"233238\",\r\n      fontSize: 14\r\n    }\r\n  },\r\n  tooltip: {\r\n    showColorCode: true\r\n  },\r\n  chartArea: {\r\n    left: 0,\r\n    top: 30,\r\n    width: \"80%\",\r\n    height: \"80%\"\r\n  },\r\n  fontName: \"Roboto\"\r\n};\r\n\r\nexport default function GraficaPrueba({ enviardataGraph, valor }) {\r\n\r\n  const [json, setJson] = useState([]);\r\n  const [total, setTotal] = useState(0);\r\n\r\n  useEffect(() => {\r\n\r\n    const chartData = [['Area', 'Nro_Polizas']]\r\n    for (let i = 0; i < enviardataGraph.length; i += 1) {\r\n      chartData.push([enviardataGraph[i].PERFIL, enviardataGraph[i].COTIZACIONES])\r\n    }\r\n    setJson(chartData);\r\n\r\n    const nums = enviardataGraph.map((cot) => cot.COTIZACIONES);\r\n    let total = nums.reduce((a, b) => a + b, 0);\r\n    setTotal(total)\r\n  }, [enviardataGraph])\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {valor === \"prodPerfil\" ? (\r\n        <>\r\n          <b>Cotizaciones por Perfil:</b> {total}\r\n        </>\r\n      ) : valor === \"emitidas\" ? (\r\n        <>\r\n          <b>Cotizaciones Emitidas:</b> {total}\r\n        </>\r\n      ): valor === \"productos\" ? (\r\n        <>\r\n          <b>Cotizaciones por Productos:</b> {total}\r\n        </>\r\n      ): valor === \"emitXperfil\" ? (\r\n        <>\r\n          <b>Cotizaciones Emitidas por Perfil:</b> {total}\r\n        </>\r\n      ) \r\n      : (\r\n            <>\r\n              {\" \"}\r\n              <b>Total:</b> {total}\r\n            </>\r\n          )\r\n      }\r\n      <Chart\r\n        width={'390px'}\r\n        height={'250px'}\r\n        chartType=\"PieChart\"\r\n        data={json}\r\n        options={pieOptions}\r\n       // graph_id=\"PieChart\"\r\n        options={{\r\n          chartArea: { left: 20, top: 10, width: '90%', height: '75%' },\r\n          legend: { position: 'bottom', textStyle: { color: 'black', fontSize: 11 } },\r\n         // title: 'Cotizaciones por Productos',\r\n          slices: [{ offset: 0.1 }],\r\n          titleTextStyle: { fontSize: 16, color: 'gray' },\r\n          is3D: true,\r\n        }}\r\n      />\r\n\r\n    </div>\r\n  );\r\n\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Alerta.js",["234"],"import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Slide from '@material-ui/core/Slide';\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n\r\nexport default function AlertDialogSlide({ open, setOpen, handleClose, msn }) {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={open}\r\n                TransitionComponent={Transition}\r\n                keepMounted\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-slide-title\"\r\n                aria-describedby=\"alert-dialog-slide-description\"\r\n            >\r\n                {/* <DialogTitle id=\"alert-dialog-slide-title\">{msn}</DialogTitle> */}\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-slide-description\">\r\n                        {msn}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} id=\"btn_alert\" style={{color:\"red !important\"}}>\r\n                        Cerrar\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\components\\Tabs3.js",[],"C:\\Users\\Desarrollo\\Desktop\\PROYECTOS\\dashboradPiramide\\src\\hooks\\useListCurrencies.js",["235"],{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":13},{"ruleId":"240","severity":1,"message":"244","line":16,"column":35,"nodeType":"242","messageId":"243","endLine":16,"endColumn":40},{"ruleId":"240","severity":1,"message":"245","line":22,"column":10,"nodeType":"242","messageId":"243","endLine":22,"endColumn":28},{"ruleId":"240","severity":1,"message":"246","line":56,"column":9,"nodeType":"242","messageId":"243","endLine":56,"endColumn":22},{"ruleId":"240","severity":1,"message":"247","line":6,"column":8,"nodeType":"242","messageId":"243","endLine":6,"endColumn":18},{"ruleId":"240","severity":1,"message":"248","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":21},{"ruleId":"240","severity":1,"message":"249","line":8,"column":8,"nodeType":"242","messageId":"243","endLine":8,"endColumn":16},{"ruleId":"240","severity":1,"message":"250","line":9,"column":8,"nodeType":"242","messageId":"243","endLine":9,"endColumn":12},{"ruleId":"240","severity":1,"message":"251","line":11,"column":8,"nodeType":"242","messageId":"243","endLine":11,"endColumn":13},{"ruleId":"240","severity":1,"message":"252","line":32,"column":10,"nodeType":"242","messageId":"243","endLine":32,"endColumn":14},{"ruleId":"240","severity":1,"message":"253","line":34,"column":9,"nodeType":"242","messageId":"243","endLine":34,"endColumn":13},{"ruleId":"240","severity":1,"message":"254","line":36,"column":9,"nodeType":"242","messageId":"243","endLine":36,"endColumn":19},{"ruleId":"240","severity":1,"message":"255","line":39,"column":9,"nodeType":"242","messageId":"243","endLine":39,"endColumn":21},{"ruleId":"256","severity":1,"message":"257","line":52,"column":11,"nodeType":"258","endLine":52,"endColumn":50},{"ruleId":"240","severity":1,"message":"259","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":13},{"ruleId":"240","severity":1,"message":"260","line":29,"column":11,"nodeType":"242","messageId":"243","endLine":29,"endColumn":16},{"ruleId":"240","severity":1,"message":"261","line":29,"column":18,"nodeType":"242","messageId":"243","endLine":29,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":63,"column":35,"nodeType":"264","messageId":"265","endLine":63,"endColumn":37},{"ruleId":"256","severity":1,"message":"257","line":100,"column":15,"nodeType":"258","endLine":100,"endColumn":87},{"ruleId":"240","severity":1,"message":"266","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":27},{"ruleId":"240","severity":1,"message":"266","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":27},{"ruleId":"240","severity":1,"message":"267","line":8,"column":17,"nodeType":"242","messageId":"243","endLine":8,"endColumn":25},{"ruleId":"262","severity":1,"message":"263","line":23,"column":32,"nodeType":"264","messageId":"265","endLine":23,"endColumn":34},{"ruleId":"240","severity":1,"message":"268","line":10,"column":8,"nodeType":"242","messageId":"243","endLine":10,"endColumn":25},{"ruleId":"240","severity":1,"message":"269","line":21,"column":8,"nodeType":"242","messageId":"243","endLine":21,"endColumn":24},{"ruleId":"240","severity":1,"message":"270","line":26,"column":8,"nodeType":"242","messageId":"243","endLine":26,"endColumn":23},{"ruleId":"271","severity":1,"message":"272","line":63,"column":3,"nodeType":"273","messageId":"265","endLine":63,"endColumn":8},{"ruleId":"240","severity":1,"message":"274","line":134,"column":10,"nodeType":"242","messageId":"243","endLine":134,"endColumn":24},{"ruleId":"240","severity":1,"message":"275","line":134,"column":33,"nodeType":"242","messageId":"243","endLine":134,"endColumn":51},{"ruleId":"240","severity":1,"message":"276","line":155,"column":13,"nodeType":"242","messageId":"243","endLine":155,"endColumn":21},{"ruleId":"262","severity":1,"message":"263","line":163,"column":20,"nodeType":"264","messageId":"265","endLine":163,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":163,"column":48,"nodeType":"264","messageId":"265","endLine":163,"endColumn":50},{"ruleId":"277","severity":1,"message":"278","line":246,"column":9,"nodeType":"279","endLine":246,"endColumn":11,"suggestions":"280"},{"ruleId":"277","severity":1,"message":"278","line":274,"column":8,"nodeType":"279","endLine":274,"endColumn":22,"suggestions":"281"},{"ruleId":"277","severity":1,"message":"282","line":399,"column":8,"nodeType":"279","endLine":399,"endColumn":10,"suggestions":"283"},{"ruleId":"240","severity":1,"message":"276","line":421,"column":13,"nodeType":"242","messageId":"243","endLine":421,"endColumn":21},{"ruleId":"262","severity":1,"message":"263","line":429,"column":20,"nodeType":"264","messageId":"265","endLine":429,"endColumn":22},{"ruleId":"262","severity":1,"message":"263","line":429,"column":48,"nodeType":"264","messageId":"265","endLine":429,"endColumn":50},{"ruleId":"262","severity":1,"message":"263","line":449,"column":22,"nodeType":"264","messageId":"265","endLine":449,"endColumn":24},{"ruleId":"262","severity":1,"message":"263","line":649,"column":25,"nodeType":"264","messageId":"265","endLine":649,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":651,"column":56,"nodeType":"286","endLine":651,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":656,"column":56,"nodeType":"286","endLine":656,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":665,"column":28,"nodeType":"264","messageId":"265","endLine":665,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":667,"column":56,"nodeType":"286","endLine":667,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":672,"column":56,"nodeType":"286","endLine":672,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":690,"column":28,"nodeType":"264","messageId":"265","endLine":690,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":692,"column":56,"nodeType":"286","endLine":692,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":697,"column":56,"nodeType":"286","endLine":697,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":710,"column":28,"nodeType":"264","messageId":"265","endLine":710,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":712,"column":56,"nodeType":"286","endLine":712,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":717,"column":56,"nodeType":"286","endLine":717,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":728,"column":28,"nodeType":"264","messageId":"265","endLine":728,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":730,"column":56,"nodeType":"286","endLine":730,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":735,"column":56,"nodeType":"286","endLine":735,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":744,"column":28,"nodeType":"264","messageId":"265","endLine":744,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":746,"column":56,"nodeType":"286","endLine":746,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":751,"column":56,"nodeType":"286","endLine":751,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":760,"column":28,"nodeType":"264","messageId":"265","endLine":760,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":762,"column":56,"nodeType":"286","endLine":762,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":768,"column":56,"nodeType":"286","endLine":768,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":777,"column":28,"nodeType":"264","messageId":"265","endLine":777,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":779,"column":56,"nodeType":"286","endLine":779,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":785,"column":56,"nodeType":"286","endLine":785,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":794,"column":28,"nodeType":"264","messageId":"265","endLine":794,"endColumn":30},{"ruleId":"284","severity":1,"message":"285","line":796,"column":56,"nodeType":"286","endLine":796,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":802,"column":56,"nodeType":"286","endLine":802,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":812,"column":26,"nodeType":"264","messageId":"265","endLine":812,"endColumn":28},{"ruleId":"284","severity":1,"message":"285","line":814,"column":56,"nodeType":"286","endLine":814,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":819,"column":56,"nodeType":"286","endLine":819,"endColumn":62},{"ruleId":"262","severity":1,"message":"263","line":831,"column":25,"nodeType":"264","messageId":"265","endLine":831,"endColumn":27},{"ruleId":"284","severity":1,"message":"285","line":833,"column":56,"nodeType":"286","endLine":833,"endColumn":63},{"ruleId":"287","severity":1,"message":"288","line":853,"column":1,"nodeType":"289","messageId":"290","endLine":870,"endColumn":2},{"ruleId":"240","severity":1,"message":"291","line":1,"column":17,"nodeType":"242","messageId":"243","endLine":1,"endColumn":25},{"ruleId":"240","severity":1,"message":"292","line":1,"column":27,"nodeType":"242","messageId":"243","endLine":1,"endColumn":36},{"ruleId":"256","severity":1,"message":"257","line":17,"column":11,"nodeType":"258","endLine":17,"endColumn":54},{"ruleId":"240","severity":1,"message":"293","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"293","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"293","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"240","severity":1,"message":"293","line":3,"column":8,"nodeType":"242","messageId":"243","endLine":3,"endColumn":14},{"ruleId":"262","severity":1,"message":"263","line":11,"column":14,"nodeType":"264","messageId":"265","endLine":11,"endColumn":16},{"ruleId":"262","severity":1,"message":"263","line":115,"column":20,"nodeType":"264","messageId":"265","endLine":115,"endColumn":22},{"ruleId":"294","severity":1,"message":"295","line":117,"column":17,"nodeType":"242","messageId":"296","endLine":117,"endColumn":32},{"ruleId":"262","severity":1,"message":"263","line":139,"column":20,"nodeType":"264","messageId":"265","endLine":139,"endColumn":22},{"ruleId":"294","severity":1,"message":"295","line":141,"column":11,"nodeType":"242","messageId":"296","endLine":141,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":164,"column":20,"nodeType":"264","messageId":"265","endLine":164,"endColumn":22},{"ruleId":"294","severity":1,"message":"295","line":166,"column":11,"nodeType":"242","messageId":"296","endLine":166,"endColumn":26},{"ruleId":"262","severity":1,"message":"263","line":190,"column":20,"nodeType":"264","messageId":"265","endLine":190,"endColumn":22},{"ruleId":"294","severity":1,"message":"295","line":192,"column":11,"nodeType":"242","messageId":"296","endLine":192,"endColumn":26},{"ruleId":"277","severity":1,"message":"297","line":229,"column":6,"nodeType":"279","endLine":229,"endColumn":8,"suggestions":"298"},{"ruleId":"277","severity":1,"message":"299","line":64,"column":6,"nodeType":"279","endLine":64,"endColumn":23,"suggestions":"300"},{"ruleId":"284","severity":1,"message":"285","line":99,"column":9,"nodeType":"286","endLine":106,"endColumn":11},{"ruleId":"240","severity":1,"message":"301","line":48,"column":10,"nodeType":"242","messageId":"243","endLine":48,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":70,"column":9,"nodeType":"286","endLine":77,"endColumn":11},{"ruleId":"240","severity":1,"message":"302","line":46,"column":10,"nodeType":"242","messageId":"243","endLine":46,"endColumn":14},{"ruleId":"240","severity":1,"message":"303","line":46,"column":16,"nodeType":"242","messageId":"243","endLine":46,"endColumn":23},{"ruleId":"240","severity":1,"message":"304","line":51,"column":9,"nodeType":"242","messageId":"243","endLine":51,"endColumn":21},{"ruleId":"305","severity":1,"message":"306","line":57,"column":31,"nodeType":"307","messageId":"308","endLine":57,"endColumn":33},{"ruleId":"284","severity":1,"message":"285","line":82,"column":9,"nodeType":"286","endLine":89,"endColumn":11},{"ruleId":"277","severity":1,"message":"309","line":63,"column":6,"nodeType":"279","endLine":63,"endColumn":29,"suggestions":"310"},{"ruleId":"284","severity":1,"message":"285","line":151,"column":9,"nodeType":"286","endLine":158,"endColumn":11},{"ruleId":"240","severity":1,"message":"311","line":7,"column":8,"nodeType":"242","messageId":"243","endLine":7,"endColumn":19},{"ruleId":"240","severity":1,"message":"312","line":1,"column":8,"nodeType":"242","messageId":"243","endLine":1,"endColumn":13},"no-native-reassign",["313"],"no-negated-in-lhs",["314"],"no-unused-vars","'Tabs3' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'SignalCellularNull' is defined but never used.","'REACT_API_URL' is assigned a value but never used.","'IconButton' is defined but never used.","'AccountCircle' is defined but never used.","'MenuItem' is defined but never used.","'Menu' is defined but never used.","'Alert' is defined but never used.","'auth' is assigned a value but never used.","'open' is assigned a value but never used.","'handleMenu' is assigned a value but never used.","'handleChange' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Paper' is defined but never used.","'login' is assigned a value but never used.","'userAuth' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'setToken' is assigned a value but never used.","'ArrowDownwardIcon' is defined but never used.","'Graficoproductos' is defined but never used.","'GrafMtoFaltSobr' is defined but never used.","no-dupe-keys","Duplicate key 'paper'.","ObjectExpression","'listCurrencies' is assigned a value but never used.","'handleChangeMoneda' is assigned a value but never used.","'fechaHoy' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'TotalIngresosME', 'oficina', 'titulo', and 'value'. Either include them or remove the dependency array.","ArrayExpression",["315"],["316"],"React Hook useEffect has missing dependencies: 'ResumenIngresosME', 'TotalIngresosME', 'fecha_hasta', 'strfechadesde', 'strfechahasta', 'titulo', 'url', 'urlGraph', 'urlGraph2', and 'value'. Either include them or remove the dependency array.",["317"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","'useState' is defined but never used.","'useEffect' is defined but never used.","'moment' is defined but never used.","no-redeclare","'ArrCotizaciones' is already defined.","redeclared","React Hook useEffect has missing dependencies: 'enviardataGrid' and 'valor'. Either include them or remove the dependency array.",["318"],"React Hook useEffect has a missing dependency: 'valor'. Either include it or remove the dependency array.",["319"],"'json' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'encabezados1' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'enviardataGrid'. Either include it or remove the dependency array.",["320"],"'DialogTitle' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"321","fix":"322"},{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"327","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},"Update the dependencies array to be: [TotalIngresosME, oficina, titulo, value]",{"range":"333","text":"334"},"Update the dependencies array to be: [TotalIngresosME, dtosAgencias, oficina, titulo, value]",{"range":"335","text":"336"},"Update the dependencies array to be: [ResumenIngresosME, TotalIngresosME, fecha_hasta, strfechadesde, strfechahasta, titulo, url, urlGraph, urlGraph2, value]",{"range":"337","text":"338"},"Update the dependencies array to be: [enviardataGrid, valor]",{"range":"339","text":"340"},"Update the dependencies array to be: [enviardataGraph, valor]",{"range":"341","text":"342"},"Update the dependencies array to be: [enviardataGraph, enviardataGrid, valor]",{"range":"343","text":"344"},[8560,8562],"[TotalIngresosME, oficina, titulo, value]",[9516,9530],"[TotalIngresosME, dtosAgencias, oficina, titulo, value]",[14010,14012],"[ResumenIngresosME, TotalIngresosME, fecha_hasta, strfechadesde, strfechahasta, titulo, url, urlGraph, urlGraph2, value]",[5954,5956],"[enviardataGrid, valor]",[1636,1653],"[enviardataGraph, valor]",[3190,3213],"[enviardataGraph, enviardataGrid, valor]"]